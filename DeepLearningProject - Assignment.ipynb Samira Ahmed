{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DeepLearningProject - Assignment.ipynb","version":"0.3.2","provenance":[]},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"cells":[{"metadata":{"id":"1fMgeYUF5aKm","colab_type":"text"},"cell_type":"markdown","source":["# Deep Learning Project: Pet Classifier using CNN\n","\n","Prepration\n","- Extract the ipynb file and the data in the same folder\n","\n","Data Set\n","- A production grade program as 10,000 training images\n","- This is a small program with 20 images of cats and 20 images of dogs. \n","- The evaluation set has 10 images of cats and 10 images of dogs\n","\n","Runs\n","- The student is expected to run the 100-300 training step\n","- A production grade code would have about 20k-50k training steps"]},{"metadata":{"id":"1-I-ZWNv5aKo","colab_type":"text"},"cell_type":"markdown","source":["### Import modules"]},{"metadata":{"id":"oHxLJDsC5aKq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"956b3509-9fbc-4526-ce6e-1b3154ef4e3f","executionInfo":{"status":"ok","timestamp":1555545329702,"user_tz":240,"elapsed":261,"user":{"displayName":"Samira Ahmed","photoUrl":"","userId":"15512489412413632241"}}},"cell_type":"code","source":["from __future__ import absolute_import\n","from __future__ import division\n","from __future__ import print_function\n","import os\n","import cv2\n","import glob\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import tensorflow as tf\n","import random\n","import sys\n","\n","\n","# To support both python 2 and python 3\n","from __future__ import division, print_function, unicode_literals\n","\n","# to make this notebook's output stable across runs\n","def reset_graph(seed=42):\n","    tf.reset_default_graph()\n","    tf.set_random_seed(seed)\n","    np.random.seed(seed)\n","    \n","from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"],"name":"stdout"}]},{"metadata":{"id":"_ORmzTFs5aK0","colab_type":"text"},"cell_type":"markdown","source":["### Set hyper parameters\n","- Run the program with three num_steps : 100,200,300"]},{"metadata":{"id":"1TlBYyaf5aK1","colab_type":"code","colab":{}},"cell_type":"code","source":["reset_graph()\n","\n","img_size = 32\n","num_channels = 3\n","img_size_flat = img_size * img_size * num_channels\n","img_shape = (img_size, img_size)\n","testpath= 'gdrive/My Drive/data/test'\n","trainpath= 'gdrive/My Drive/data/train'\n","labels = {'cats': 0, 'dogs': 1}\n","fc_size=32 #size of the output of final FC layer\n","num_steps=300 #Try 100, 200, 300. number of steps that training data should be looped. Usually 20K\n","tf.logging.set_verbosity(tf.logging.INFO)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"10eKZQmz5aK5","colab_type":"text"},"cell_type":"markdown","source":["### Read the image dataset"]},{"metadata":{"id":"T6FBKocf5aK6","colab_type":"code","outputId":"213c3048-2c8c-4cae-bb3b-b9ddea273cb3","executionInfo":{"status":"ok","timestamp":1555545336965,"user_tz":240,"elapsed":740,"user":{"displayName":"Samira Ahmed","photoUrl":"","userId":"15512489412413632241"}},"colab":{"base_uri":"https://localhost:8080/","height":214}},"cell_type":"code","source":["def read_images_classes(basepath,imgSize=img_size):\n","    image_stack = []\n","    label_stack = []\n","\n","    for counter, l in enumerate(labels):\n","        path = os.path.join(basepath, l,'*g')\n","        for img in glob.glob(path):\n","            one_hot_vector =np.zeros(len(labels),dtype=np.int16)\n","            one_hot_vector[counter]=1\n","            image = cv2.imread(img)\n","            im_resize = cv2.resize(image,img_shape, interpolation=cv2.INTER_CUBIC)\n","            image_stack.append(im_resize)\n","            label_stack.append(labels[l])            \n","    return np.array(image_stack), np.array(label_stack)\n","\n","X_train, y_train=read_images_classes(trainpath)\n","X_test, y_test=read_images_classes(testpath)\n","\n","#test a sample image\n","print('length of train image set',len(X_train))\n","print('X_data shape:', X_train.shape)\n","print('y_data shape:', y_train.shape)\n","\n","fig1 = plt.figure() \n","ax1 = fig1.add_subplot(2,2,1) \n","img = cv2.resize(X_train[0],(64,64), interpolation=cv2.INTER_CUBIC)\n","ax1.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n","plt.title(y_train[0])\n","plt.show()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["length of train image set 40\n","X_data shape: (40, 32, 32, 3)\n","y_data shape: (40,)\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\ns4kVUAAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"YVleZEq_5aK_","colab_type":"text"},"cell_type":"markdown","source":["### Assignment: Define the tensorflow model\n","\n","The model should have the following layers\n","- input later\n","- conv layer 1 with 32 filters of kernel  size[5,5],\n","- pooling layer 1 with pool size[2,2] and stride 2\n","- conv layer 2 with 64 filters of kernel  size[5,5],\n","- pooling layer 2 with pool size[2,2] and stride 2\n","- dense layer whose output size is fixed in the hyper parameter: fc_size=32\n","- drop out layer with droput probability 0.4\n","- predict the class by doing a softmax on the output of the dropout layers\n","\n","Training\n","- For training fefine the loss function and minimize it\n","- For evaluation calculate the accuracy\n","\n","Reading Material\n","- For ideas look at tensorflow layers tutorial"]},{"metadata":{"id":"sTlaXD665aLA","colab_type":"text"},"cell_type":"markdown","source":["### The cnn_model_fn has to be defined here by the student"]},{"metadata":{"id":"dPIwuZAd5aLB","colab_type":"code","colab":{}},"cell_type":"code","source":["def cnn_model_fn(features, labels, mode):\n","\n","  # Input Layer\n","  # Input layer Reshape X to 4D tensor[batch_size, image_height, image_width, channels]\n","  input_layer = tf.reshape(features[\"x\"], [-1, 32, 32, 3])\n","\n","  # Convolutional Layer #1\n","  # Convolutional layer 1 with 32 filters of kernel size[5,5] \n","  # Padding is added to project height and weight and Relu is added as an activation function\n","  # Input tensor shape [batch_size,32,32,3]\n","  # Output tensor shape [batch_size,32,32,32]\n","  conv1 = tf.layers.conv2d(inputs=input_layer, filters=32, kernel_size=[5, 5], padding=\"same\", activation=tf.nn.relu)\n","\n","  # Pooling Layer #1\n","  # Connecting Convolutional layer #1 with Pooling layer #1\n","  # Pooling layer 1 with pool size[2,2] and stride 2  \n","  # Input(conv1) tensor shape [batch_size,32,32,32]\n","  # Output by (pool1) tensor shape[batch_size,16,16,32] height and width reduced in size by 50%\n","  # Stride is 2 seperated by 2 pixel 2X2 filter\n","  pool1 = tf.layers.max_pooling2d(inputs=conv1, pool_size=[2, 2], strides=2)\n","\n","  # Convolutional Layer #2\n","  # Connecting Pooling Layer #1 with Convolutional layer #2\n","  # Convolutional layer 2 with 64 filters of kernel size[5,5] \n","  # Input (pool1) tensor shape [batch_size,16,16,32]\n","  # Output by (conv2) tensor shape [batch_size,16,16,64]\n","  conv2 = tf.layers.conv2d(inputs=pool1,filters=64,kernel_size=[5, 5], padding=\"same\", activation=tf.nn.relu)\n","  \n","  \n","  # Pooling Layer #2\n","  # Connecting Convolutional layer #2 with Pooling layer #2\n","  # Pooling layer 2 with pool size[2,2] and stride 2\n","  # Input (conv2) tensor shape [batch_size,16,16,64]\n","  # Output by (pool2) tensor shape [batch_size,8,8,64] height and width reduced in size by 50%\n","  pool2 = tf.layers.max_pooling2d(inputs=conv2, pool_size=[2, 2], strides=2)\n","\n","  # Flatten output tensor into a batch vector\n","  # Input (pool2)tensor shape [batch_size,8,8,64]\n","  # Output by (pool2_flat) shape [batch_size,8*8*64] #[batch_size,4096 ]\n","  #pool2_flat = tf.contrib.layers.flatten(pool2)\n","  pool2_flat = tf.reshape(pool2, [-1, 8 * 8 * 64])\n","\n","  # Dense Layer (fully Connected)\n","  # Dense connected with 1024 neurons\n","  # Input (pool2_flat tensor shape [batch_size,8 * 8 * 64])\n","  # Output (dense) Dense Layer [batch_size,1024]\n","  dense = tf.layers.dense(inputs=pool2_flat, units=1024, activation=tf.nn.relu)\n","  \n","  # Dropout Layer\n","  # Dropout layer with dropout probability 0.4 \n","  dropout = tf.layers.dropout(inputs=dense, rate=0.4, training=mode == tf.estimator.ModeKeys.TRAIN)\n","  \n","  \n","  # Logits Layer\n","  # Input tensor shape [batch_size,1024]\n","  # Output tensor shape [batch_size,32]\n","  logits = tf.layers.dense(inputs=dropout, units=30)\n","\n","  predictions = {\n","      # Generate predictions (for PREDICT and EVAL mode)\n","      \"classes\": tf.argmax(input=logits, axis=1),\n","      # Add `softmax_tensor` to the graph. It is used for PREDICT and by the\n","      # `logging_hook`.\n","      \"probabilities\": tf.nn.softmax(logits, name=\"softmax_tensor\")\n","  }\n","\n","  if mode == tf.estimator.ModeKeys.PREDICT:\n","    return tf.estimator.EstimatorSpec(mode=mode, predictions=predictions)\n","\n","  # Calculate Loss (for both TRAIN and EVAL modes)\n","  loss = tf.losses.sparse_softmax_cross_entropy(labels=labels, logits=logits)\n","\n","  # Configure the Training Op (for TRAIN mode)\n","  if mode == tf.estimator.ModeKeys.TRAIN:\n","    optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.001)\n","    train_op = optimizer.minimize(\n","        loss=loss,\n","        global_step=tf.train.get_global_step())\n","    return tf.estimator.EstimatorSpec(mode=mode, loss=loss, train_op=train_op)\n","\n","  # Add evaluation metrics (for EVAL mode)\n","  eval_metric_ops = {\n","      \"accuracy\": tf.metrics.accuracy(\n","          labels=labels, predictions=predictions[\"classes\"])\n","  }\n","  return tf.estimator.EstimatorSpec(\n","      mode=mode, loss=loss, eval_metric_ops=eval_metric_ops)\n","\n","  \n","  \n","  \n","  \n","\n","  "],"execution_count":0,"outputs":[]},{"metadata":{"id":"qUcBx9qa5aLE","colab_type":"text"},"cell_type":"markdown","source":["### Run the tensorflow model\n","\n","This section will use the model defined by the student and run the training and evaluation step"]},{"metadata":{"id":"7lCliPRd5aLG","colab_type":"code","outputId":"3de7121d-b481-464a-eef3-1f3691c07db4","colab":{"base_uri":"https://localhost:8080/","height":6186},"executionInfo":{"status":"ok","timestamp":1555545661283,"user_tz":240,"elapsed":21645,"user":{"displayName":"Samira Ahmed","photoUrl":"","userId":"15512489412413632241"}}},"cell_type":"code","source":["#X_train = np.array((X_train/255.0),dtype=np.float16)\n","#X_test = np.array((X_test/255.0), dtype=np.float16)\n","X_train = np.array((X_train/255.0),dtype=np.float32)\n","X_test = np.array((X_test/255.0), dtype=np.float32)\n","\n","pets_classifier = tf.estimator.Estimator(model_fn=cnn_model_fn, model_dir=\"gdrive/My Drive/data/train/tmp/pets_convnet_model\")\n","#pets_classifier = tf.estimator.Estimator(model_fn=cnn_model_fn)\n","tensors_to_log = {\"probabilities\": \"softmax_tensor\"}\n","logging_hook = tf.train.LoggingTensorHook(tensors=tensors_to_log, every_n_iter=50)\n","train_input_fn = tf.estimator.inputs.numpy_input_fn(x={\"x\": X_train}, y=y_train, batch_size=10,\n","                                                      num_epochs=None, shuffle=True)\n","pets_classifier.train(input_fn=train_input_fn, steps=num_steps, hooks=[logging_hook])\n","eval_input_fn = tf.estimator.inputs.numpy_input_fn(x={\"x\": X_test}, y=y_test, num_epochs=1,shuffle=False)\n","eval_results = pets_classifier.evaluate(input_fn=eval_input_fn)\n","print(eval_results)"],"execution_count":29,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Using default config.\n","INFO:tensorflow:Using config: {'_model_dir': 'gdrive/My Drive/data/train/tmp/pets_convnet_model', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': allow_soft_placement: true\n","graph_options {\n","  rewrite_options {\n","    meta_optimizer_iterations: ONE\n","  }\n","}\n",", '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7efe8bdb9470>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Colocations handled automatically by placer.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_estimator/python/estimator/inputs/queues/feeding_queue_runner.py:62: QueueRunner.__init__ (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","To construct input pipelines, use the `tf.data` module.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_estimator/python/estimator/inputs/queues/feeding_functions.py:500: add_queue_runner (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","To construct input pipelines, use the `tf.data` module.\n","INFO:tensorflow:Calling model_fn.\n","WARNING:tensorflow:From <ipython-input-27-e5eb0b1c422e>:12: conv2d (from tensorflow.python.layers.convolutional) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use keras.layers.conv2d instead.\n","WARNING:tensorflow:From <ipython-input-27-e5eb0b1c422e>:20: max_pooling2d (from tensorflow.python.layers.pooling) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use keras.layers.max_pooling2d instead.\n","WARNING:tensorflow:From <ipython-input-27-e5eb0b1c422e>:47: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use keras.layers.dense instead.\n","WARNING:tensorflow:From <ipython-input-27-e5eb0b1c422e>:51: dropout (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use keras.layers.dropout instead.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/layers/core.py:143: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/losses/losses_impl.py:209: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.cast instead.\n","INFO:tensorflow:Done calling model_fn.\n","INFO:tensorflow:Create CheckpointSaverHook.\n","INFO:tensorflow:Graph was finalized.\n","INFO:tensorflow:Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/monitored_session.py:809: start_queue_runners (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","To construct input pipelines, use the `tf.data` module.\n","INFO:tensorflow:Saving checkpoints for 0 into gdrive/My Drive/data/train/tmp/pets_convnet_model/model.ckpt.\n","INFO:tensorflow:probabilities = [[0.04467412 0.03212927 0.02981588 0.02281461 0.02926839 0.0407905\n","  0.03780662 0.03164261 0.03149166 0.02692235 0.01844614 0.03487855\n","  0.02201162 0.03731739 0.02497317 0.03645752 0.02669775 0.03410313\n","  0.03589252 0.04627907 0.04045866 0.03547354 0.02343499 0.03600419\n","  0.03658988 0.03729305 0.04074036 0.03605876 0.0311428  0.03839083]\n"," [0.03646578 0.0348949  0.02982439 0.0239941  0.02873184 0.03578354\n","  0.03647333 0.03162625 0.03863795 0.03028499 0.03243493 0.04752788\n","  0.02702003 0.03316104 0.02906534 0.03467486 0.02566267 0.03523615\n","  0.03121967 0.03696391 0.03422426 0.03532973 0.03085695 0.03269554\n","  0.03236029 0.03809341 0.02999362 0.03247454 0.03210319 0.04218494]\n"," [0.03279161 0.03040516 0.03527042 0.0288329  0.0367299  0.03342734\n","  0.03689545 0.02891625 0.04062431 0.03059361 0.03281888 0.04003086\n","  0.02500955 0.03592841 0.03041565 0.03714435 0.02421865 0.03516211\n","  0.03358164 0.03950769 0.03304398 0.02429838 0.02633069 0.03419195\n","  0.0293043  0.03410223 0.03430769 0.04502501 0.03644613 0.03464497]\n"," [0.06038405 0.03135035 0.03198857 0.02125656 0.04098058 0.0338163\n","  0.0248133  0.03796687 0.04404773 0.02436054 0.02451686 0.04132034\n","  0.0190677  0.04540233 0.02008965 0.04029975 0.0195224  0.04050627\n","  0.02799738 0.03283896 0.04675452 0.0321994  0.02501205 0.04272041\n","  0.03250177 0.02198323 0.03316252 0.03224941 0.03872412 0.03216603]\n"," [0.03895852 0.03263056 0.03515293 0.0206132  0.03170144 0.03661005\n","  0.03153474 0.03683551 0.04328584 0.03221731 0.03232808 0.0339618\n","  0.02415239 0.03666849 0.0263296  0.03835407 0.02610201 0.03095678\n","  0.03730298 0.03358197 0.03647955 0.03660055 0.02496006 0.03298751\n","  0.03392415 0.03027753 0.0334391  0.03441848 0.03622379 0.04141105]\n"," [0.0383203  0.02809677 0.03142956 0.02147464 0.03815419 0.03659747\n","  0.03400826 0.0353586  0.04469919 0.02910755 0.02513321 0.04481366\n","  0.02232721 0.02850208 0.03031115 0.03689566 0.03079049 0.0357857\n","  0.03126595 0.04062445 0.03915161 0.02913275 0.02213566 0.04162468\n","  0.03621746 0.03266967 0.03175798 0.03706616 0.03126932 0.0352786 ]\n"," [0.04547114 0.02916244 0.02833075 0.02513256 0.03308117 0.03160512\n","  0.03200646 0.03604658 0.04189911 0.03866645 0.02465683 0.03624549\n","  0.01760297 0.0319715  0.02764805 0.02878084 0.02827058 0.03979207\n","  0.03991223 0.03949426 0.04049253 0.04207537 0.02040122 0.03986195\n","  0.03707169 0.03184661 0.03011642 0.03084411 0.03798911 0.03352436]\n"," [0.03522434 0.02988274 0.02938057 0.02723392 0.03276496 0.04195049\n","  0.02739043 0.03079118 0.03678545 0.0328152  0.03416599 0.03587959\n","  0.02231757 0.02916001 0.02833201 0.04079898 0.02926285 0.03923134\n","  0.03329825 0.03963128 0.03359973 0.03080441 0.02539303 0.03561545\n","  0.03404927 0.03041768 0.03838301 0.04260818 0.03773549 0.03509662]\n"," [0.04717902 0.02870631 0.03139993 0.0222087  0.03268725 0.03509138\n","  0.03831235 0.03438403 0.04096579 0.03070509 0.03127741 0.03734959\n","  0.02608962 0.03286868 0.02833839 0.04810676 0.02598223 0.03430965\n","  0.03310693 0.0322834  0.03230324 0.03221605 0.0250679  0.03632487\n","  0.03686909 0.03243736 0.036646   0.03306723 0.03160409 0.03211167]\n"," [0.03808426 0.02842838 0.03370733 0.02077088 0.03456641 0.02957834\n","  0.0347466  0.03586446 0.04134769 0.02948735 0.0317724  0.0445486\n","  0.02652174 0.0353837  0.0288327  0.04410863 0.02656135 0.03380555\n","  0.03100092 0.04207848 0.03665625 0.03205506 0.02656711 0.03731718\n","  0.03286587 0.0308936  0.035954   0.03691353 0.03065137 0.02893017]]\n","INFO:tensorflow:loss = 3.3121235, step = 1\n","INFO:tensorflow:probabilities = [[0.41304797 0.36307514 0.00962545 0.00427953 0.00611887 0.00539054\n","  0.00789667 0.00804513 0.007772   0.00590455 0.00494472 0.01089816\n","  0.0048888  0.00966482 0.00317344 0.00958469 0.00490032 0.00732048\n","  0.00763235 0.01255256 0.00968276 0.01137805 0.00416114 0.01065761\n","  0.01222562 0.00575996 0.00915627 0.01012717 0.01346055 0.00667465]\n"," [0.33213356 0.36329097 0.01817725 0.00463859 0.00858313 0.01001328\n","  0.00837517 0.01115249 0.01032961 0.00625876 0.00407079 0.01713919\n","  0.00494428 0.01509379 0.00461119 0.02574564 0.00982701 0.00608741\n","  0.01149579 0.01365691 0.00952684 0.01152242 0.00674293 0.01547797\n","  0.01344766 0.00653566 0.01467468 0.01135995 0.00941839 0.0156686 ]\n"," [0.559761   0.21357462 0.00774987 0.00386711 0.00571669 0.00764109\n","  0.00972433 0.00709949 0.01753947 0.00811697 0.00190988 0.01328726\n","  0.00135397 0.00809182 0.00506822 0.00691116 0.00650425 0.00278896\n","  0.00760503 0.01105178 0.00771547 0.00444455 0.00622669 0.00636384\n","  0.01119303 0.00679362 0.00671968 0.02165831 0.01042989 0.01309207]\n"," [0.698151   0.19570075 0.00333242 0.00283032 0.00305754 0.0040442\n","  0.00271999 0.00493693 0.00393195 0.0032503  0.00085076 0.00356849\n","  0.00191197 0.00750281 0.00161807 0.00418447 0.0020398  0.00283396\n","  0.00146323 0.00634201 0.00823547 0.00503302 0.00198659 0.00329068\n","  0.00170035 0.00295982 0.0070821  0.00937245 0.00345278 0.00261577]\n"," [0.6795433  0.18036985 0.00331467 0.00259517 0.00467596 0.00366765\n","  0.0024099  0.00739596 0.00767732 0.00342671 0.00170115 0.01151633\n","  0.00164464 0.00192898 0.00303014 0.00732811 0.00312155 0.00232092\n","  0.00364075 0.00515198 0.00614982 0.00555623 0.00727131 0.00751991\n","  0.00252808 0.00620788 0.00608675 0.01170622 0.00458309 0.0059296 ]\n"," [0.50816035 0.34372056 0.00807003 0.00196138 0.00266629 0.00612672\n","  0.00393688 0.00493806 0.00692428 0.00465863 0.00274072 0.00664284\n","  0.00192956 0.00252851 0.00148127 0.00678041 0.0029815  0.0070569\n","  0.00383271 0.00379828 0.01908124 0.00425765 0.00160628 0.01528294\n","  0.00399222 0.00474459 0.00486098 0.00642755 0.00622103 0.00258967]\n"," [0.43736106 0.25154233 0.01552102 0.00546165 0.00954804 0.01163644\n","  0.01007205 0.01127192 0.01001133 0.00958148 0.01063261 0.02534991\n","  0.00548303 0.01118897 0.00516718 0.01639914 0.00739738 0.00653394\n","  0.01250028 0.01671049 0.00796439 0.01215121 0.0088472  0.01516001\n","  0.00616703 0.00770372 0.01989528 0.01160484 0.00760685 0.01352926]\n"," [0.3186395  0.21338958 0.01724131 0.0051535  0.01764605 0.0220104\n","  0.01447272 0.02384077 0.02515391 0.01680298 0.00809011 0.02817817\n","  0.00630753 0.01599251 0.00968754 0.02191473 0.01262104 0.0223285\n","  0.01468843 0.01459681 0.02709057 0.01598154 0.00985445 0.02348744\n","  0.01088045 0.01286566 0.01756652 0.01603002 0.02258508 0.01490224]\n"," [0.28420275 0.21083856 0.02758131 0.01567302 0.01747859 0.01317662\n","  0.02902224 0.01830686 0.02013311 0.01357812 0.01148296 0.02628266\n","  0.01247631 0.02301255 0.0127846  0.03075797 0.01060001 0.01937494\n","  0.01469002 0.02274145 0.02350928 0.0164103  0.01217455 0.01666412\n","  0.01784927 0.01798378 0.01826631 0.01792744 0.00908998 0.0159303 ]\n"," [0.2874693  0.2943286  0.01997817 0.00993378 0.01134959 0.01557411\n","  0.01310821 0.01159058 0.03343505 0.01273266 0.00749969 0.01848407\n","  0.00745009 0.0188149  0.00611115 0.01305922 0.01115941 0.00770507\n","  0.01081675 0.01703796 0.01127006 0.01356266 0.01000993 0.01926089\n","  0.01242386 0.01790385 0.02191033 0.02936706 0.01980363 0.01684928]] (2.876 sec)\n","INFO:tensorflow:global_step/sec: 16.1974\n","INFO:tensorflow:probabilities = [[0.37707442 0.5458695  0.00340993 0.00070723 0.00149929 0.00300635\n","  0.00661141 0.00475065 0.00310019 0.00293706 0.0018473  0.00115263\n","  0.00068813 0.00155365 0.0016025  0.0015675  0.00224551 0.00128734\n","  0.00067097 0.00375823 0.003058   0.00303496 0.00033233 0.00907029\n","  0.00326815 0.00429039 0.00200769 0.00557929 0.00102083 0.00299826]\n"," [0.6231466  0.36283955 0.00163494 0.00022863 0.00029069 0.00036709\n","  0.00033285 0.00145397 0.00048033 0.00029401 0.00025142 0.00047366\n","  0.00019182 0.00028637 0.00008043 0.0007991  0.00038043 0.00015659\n","  0.00025119 0.00065452 0.00028112 0.00082269 0.00016746 0.00068857\n","  0.00029591 0.00057994 0.00045045 0.00096194 0.0006098  0.00054796]\n"," [0.6849276  0.2997275  0.00054775 0.00033373 0.00046946 0.00027666\n","  0.00049486 0.00045646 0.00076021 0.00084461 0.00017157 0.00091379\n","  0.00011585 0.00105403 0.00008049 0.00092903 0.00010108 0.00030152\n","  0.00036839 0.00045653 0.00035706 0.00017333 0.00025035 0.00071588\n","  0.00022219 0.00052123 0.00131254 0.00070692 0.00159076 0.00081859]\n"," [0.40360865 0.5670926  0.00092245 0.00037616 0.00138618 0.00081245\n","  0.00055141 0.00070397 0.00129809 0.00048335 0.00014593 0.00257618\n","  0.00106328 0.00189474 0.00039622 0.00148797 0.00104452 0.00068271\n","  0.00069937 0.00126132 0.00089907 0.00085741 0.00047183 0.00087719\n","  0.00099277 0.00114093 0.00132664 0.00116861 0.0021303  0.00164766]\n"," [0.56665635 0.4258278  0.0000979  0.00008826 0.00010882 0.00031939\n","  0.0003256  0.00022963 0.00031359 0.00024437 0.00024001 0.00033113\n","  0.0000297  0.0003763  0.00017355 0.00059496 0.00028573 0.00011718\n","  0.00031429 0.00055651 0.00043275 0.00016037 0.00004145 0.00035218\n","  0.00008272 0.00040572 0.00037554 0.00041936 0.00024581 0.00025312]\n"," [0.6995446  0.28761595 0.00017087 0.00019661 0.00028156 0.00048936\n","  0.000173   0.00049209 0.00067622 0.0004997  0.00054765 0.00103297\n","  0.00012098 0.00067    0.0000873  0.00020921 0.00034405 0.00027763\n","  0.00023345 0.00093443 0.00023272 0.00020749 0.0001383  0.00090314\n","  0.00044097 0.00050489 0.00094584 0.00066394 0.00057071 0.00079437]\n"," [0.43564275 0.48897228 0.00267507 0.00090152 0.00136048 0.00288577\n","  0.00324574 0.00891385 0.0015663  0.00371574 0.00066894 0.00395847\n","  0.00116356 0.00257376 0.00111652 0.00266811 0.00101561 0.00142023\n","  0.00356984 0.00329477 0.00167918 0.00226839 0.00142446 0.00188942\n","  0.00138344 0.00105967 0.00252241 0.01322087 0.00177603 0.0014467 ]\n"," [0.3587298  0.3325122  0.00707579 0.0045322  0.00817144 0.01426232\n","  0.01039399 0.01036736 0.01257381 0.0092911  0.00595083 0.01699115\n","  0.00980463 0.01123558 0.00568602 0.02045991 0.01056809 0.00536537\n","  0.01210966 0.01075909 0.01621674 0.00981475 0.01120697 0.01620524\n","  0.00924436 0.00923552 0.01309627 0.01311893 0.00934207 0.01567881]\n"," [0.64500445 0.33027327 0.00331946 0.00014564 0.0010786  0.00097805\n","  0.00093326 0.00082474 0.00115085 0.00067746 0.00032396 0.00069232\n","  0.00057702 0.00050972 0.00026955 0.00165568 0.00049613 0.00048568\n","  0.00062512 0.0011976  0.0011136  0.00100164 0.0001109  0.0012465\n","  0.00099217 0.00028506 0.00094565 0.00155817 0.0008069  0.00072089]\n"," [0.7852729  0.16116934 0.00097944 0.00046694 0.00354981 0.00077505\n","  0.00051949 0.00523534 0.00253413 0.00152459 0.0006738  0.005862\n","  0.00077938 0.00144459 0.00040188 0.0019064  0.00118756 0.00082744\n","  0.0013211  0.0057818  0.00106949 0.00221997 0.00094821 0.00304543\n","  0.00078562 0.00200564 0.00119301 0.00380474 0.00117385 0.00154091]] (3.299 sec)\n","INFO:tensorflow:loss = 0.99550784, step = 101 (6.180 sec)\n","INFO:tensorflow:probabilities = [[0.53562564 0.45849696 0.00010594 0.00004558 0.00013006 0.00031313\n","  0.00017114 0.00029778 0.00015178 0.00010352 0.00009363 0.00032867\n","  0.00009483 0.00004449 0.00006749 0.00043061 0.00017287 0.00028099\n","  0.00017105 0.00025824 0.00038034 0.00031529 0.00004967 0.0004627\n","  0.00015893 0.00023018 0.00027933 0.00049702 0.00019154 0.00005055]\n"," [0.31800056 0.66946435 0.00032873 0.00024217 0.00025548 0.0002119\n","  0.00027591 0.00050627 0.00034918 0.00022034 0.00012935 0.00025091\n","  0.00017015 0.00046931 0.00010093 0.0005273  0.00013195 0.00030179\n","  0.00038054 0.00033863 0.00111543 0.00088946 0.00042429 0.00072978\n","  0.00040094 0.00122073 0.00034656 0.00045497 0.00038234 0.00137972]\n"," [0.7247459  0.26221362 0.00047728 0.00017911 0.0002053  0.00031139\n","  0.00026232 0.0005402  0.00046844 0.00033299 0.00067989 0.0017803\n","  0.00037447 0.0002761  0.0000673  0.00049061 0.00054964 0.00023408\n","  0.00035065 0.00097453 0.00059623 0.00050667 0.00020223 0.00119352\n","  0.00012915 0.00036984 0.00017487 0.00043643 0.00058548 0.00029141]\n"," [0.60126203 0.3777919  0.00040461 0.00049531 0.00091254 0.00028519\n","  0.00071636 0.00177521 0.00138946 0.00047261 0.0007355  0.00121121\n","  0.00049718 0.00060256 0.0001851  0.00069819 0.00030455 0.00034345\n","  0.00045169 0.00179787 0.00056584 0.00101092 0.0001559  0.00157465\n","  0.00048694 0.00027209 0.00067386 0.00169246 0.00055168 0.00068325]\n"," [0.7324907  0.22860229 0.00125819 0.00112455 0.00071143 0.00139734\n","  0.001276   0.00286075 0.00178454 0.00109447 0.00049151 0.00229545\n","  0.00051077 0.00146812 0.00100731 0.00085122 0.00072313 0.00203872\n","  0.00095815 0.00092869 0.00212969 0.00072758 0.00080091 0.00097933\n","  0.00107369 0.00155429 0.00214812 0.00347607 0.00197313 0.00126389]\n"," [0.4143228  0.5572444  0.00046972 0.00040142 0.00117367 0.00161701\n","  0.00037452 0.00086375 0.00196906 0.00099861 0.00007834 0.0026023\n","  0.00021499 0.00122857 0.00027385 0.00172172 0.00062687 0.00031798\n","  0.00020485 0.00171664 0.00027563 0.00153959 0.00026277 0.00167713\n","  0.0003351  0.00150259 0.00196932 0.00072131 0.00151099 0.00178454]\n"," [0.6798005  0.30931482 0.00111181 0.00008734 0.00066245 0.00059679\n","  0.00055807 0.00022188 0.00061054 0.00021345 0.00011396 0.0008116\n","  0.00047467 0.00015279 0.00007163 0.00056001 0.00015262 0.00036257\n","  0.00027015 0.00034155 0.00023269 0.00040929 0.00005428 0.00093908\n","  0.0001004  0.00007646 0.00042634 0.00034362 0.00053864 0.00039009]\n"," [0.3428617  0.65510136 0.00035907 0.00001022 0.00003347 0.00003602\n","  0.00012049 0.00023608 0.00002156 0.00008143 0.00001893 0.00007673\n","  0.00003632 0.0001271  0.00001158 0.00013848 0.00001802 0.0000218\n","  0.00002702 0.00004545 0.00003216 0.00008625 0.00001894 0.00001959\n","  0.00000722 0.00007307 0.00010182 0.00019349 0.00002977 0.00005492]\n"," [0.30741796 0.6626447  0.00171121 0.00064853 0.00110413 0.0014807\n","  0.00056721 0.00250173 0.00111258 0.00076884 0.0004544  0.00197558\n","  0.0003888  0.00095408 0.00057205 0.00065913 0.00054817 0.00081931\n","  0.00069654 0.00114277 0.00201382 0.00107404 0.00039565 0.00185508\n","  0.00056221 0.00033279 0.00111683 0.00150132 0.00139557 0.00158434]\n"," [0.4996811  0.47306576 0.00083175 0.00024149 0.00119836 0.00107115\n","  0.00099191 0.00229193 0.00066663 0.00161486 0.00065112 0.00154837\n","  0.00052171 0.00216557 0.00024144 0.0006479  0.00151317 0.00044157\n","  0.00075875 0.0002866  0.0014775  0.0009828  0.00042742 0.00081677\n","  0.00045821 0.0010504  0.00055496 0.0014249  0.00047145 0.00190443]] (3.241 sec)\n","INFO:tensorflow:global_step/sec: 15.3977\n","INFO:tensorflow:probabilities = [[0.48567095 0.5051294  0.00014307 0.00018264 0.00045843 0.00006193\n","  0.00018417 0.00046441 0.0005449  0.00015057 0.00008941 0.00106811\n","  0.00004274 0.00085258 0.00009192 0.00047802 0.00015508 0.00009198\n","  0.00024775 0.00053067 0.00007455 0.00024131 0.00012785 0.00031527\n","  0.00009124 0.00029389 0.00023825 0.00153036 0.00019489 0.00025349]\n"," [0.18126822 0.81612873 0.00009225 0.00003694 0.0000418  0.00014258\n","  0.00007812 0.00012696 0.00004058 0.00010596 0.0000455  0.00027221\n","  0.00002102 0.00006323 0.00001505 0.00007608 0.00009115 0.00004719\n","  0.00005557 0.00008542 0.00014554 0.00006046 0.00002597 0.00012581\n","  0.00005982 0.00006678 0.00008754 0.00026882 0.00007542 0.00024925]\n"," [0.572763   0.40848184 0.0011134  0.00033414 0.0006411  0.00042294\n","  0.00028473 0.00059519 0.00053042 0.00042877 0.00017255 0.00100589\n","  0.00022439 0.00197945 0.00035213 0.00174137 0.00073045 0.00036552\n","  0.00031386 0.00071825 0.00050174 0.00105367 0.00014453 0.00044479\n","  0.0006264  0.00093064 0.00036118 0.00147117 0.00062256 0.00064394]\n"," [0.42210263 0.5773923  0.00003103 0.00000839 0.00001514 0.00000742\n","  0.00000737 0.0000203  0.00001296 0.00001033 0.00000221 0.00004071\n","  0.00000425 0.00001013 0.00000189 0.00007047 0.00000733 0.00000872\n","  0.00000618 0.00002069 0.00003064 0.00001452 0.000004   0.00007146\n","  0.000025   0.00000343 0.00001087 0.00002865 0.00001963 0.00001125]\n"," [0.5264934  0.47193617 0.00005625 0.00001647 0.00002344 0.00004304\n","  0.00003742 0.00002339 0.00013757 0.00011585 0.00001964 0.00019737\n","  0.00000994 0.00004367 0.00001175 0.00003761 0.00002977 0.00002035\n","  0.00002549 0.00011209 0.0000482  0.00008518 0.00000721 0.0002085\n","  0.00002178 0.00002395 0.00004818 0.00003823 0.00008529 0.00004289]\n"," [0.41603592 0.5778343  0.00031225 0.00016196 0.0001945  0.00011522\n","  0.00036697 0.00013034 0.00013564 0.0001112  0.0001186  0.00037742\n","  0.0001419  0.00016856 0.00005727 0.00025874 0.00007365 0.00017418\n","  0.00020348 0.00036711 0.00040527 0.00021398 0.00005603 0.00036225\n","  0.00016543 0.00031976 0.00020694 0.00014721 0.00035511 0.00042885]\n"," [0.26845765 0.7304614  0.00004335 0.00000973 0.00002254 0.00002308\n","  0.00001583 0.00006566 0.00004841 0.00001478 0.0000076  0.00010123\n","  0.00001409 0.00003582 0.00001148 0.0000806  0.00006799 0.00000448\n","  0.00000906 0.0000325  0.00006027 0.00001139 0.00000303 0.00012436\n","  0.00002548 0.0000087  0.00003045 0.0000756  0.00004186 0.00009157]\n"," [0.39815927 0.5697239  0.0009626  0.00027626 0.00089106 0.00122455\n","  0.00088259 0.00144007 0.00132913 0.00079555 0.00046518 0.00181043\n","  0.00074277 0.00144692 0.00041303 0.00094599 0.00149383 0.00047074\n","  0.00065537 0.00083587 0.00124235 0.00106375 0.00065658 0.00186256\n","  0.0008881  0.00102007 0.00203628 0.00180949 0.00175493 0.00270079]\n"," [0.4518087  0.5417802  0.00011552 0.00004476 0.00019277 0.00016728\n","  0.00007284 0.00015969 0.00035802 0.00015258 0.00006647 0.00047693\n","  0.00008282 0.0002343  0.00003935 0.00019085 0.00031722 0.00005711\n","  0.0000618  0.00016338 0.00074409 0.00025739 0.00008572 0.00021575\n","  0.00022687 0.00015663 0.00021706 0.00109825 0.00029255 0.00016318]\n"," [0.40867865 0.5854629  0.00025054 0.00009567 0.00009748 0.0000904\n","  0.00008802 0.00045652 0.00012525 0.00042131 0.00005812 0.00013798\n","  0.00001511 0.00025533 0.00003858 0.0004359  0.00014831 0.00011094\n","  0.00012737 0.00015143 0.00025712 0.00026178 0.00009129 0.00064224\n","  0.00011351 0.00020911 0.00018178 0.00068764 0.00018326 0.00012646]] (3.254 sec)\n","INFO:tensorflow:loss = 0.87525046, step = 201 (6.494 sec)\n","INFO:tensorflow:probabilities = [[0.5472937  0.4416824  0.00219904 0.00012739 0.00031015 0.00079955\n","  0.00014002 0.00078307 0.00031767 0.00024393 0.00007884 0.00055437\n","  0.00019802 0.00006415 0.00012585 0.00031311 0.00026606 0.00025446\n","  0.00026287 0.00019247 0.00029623 0.00029719 0.00004682 0.00032753\n","  0.00019125 0.00008187 0.00030638 0.00144504 0.00035429 0.00044629]\n"," [0.27203175 0.70997095 0.0005831  0.00015059 0.00043041 0.00019062\n","  0.00033481 0.00054255 0.00148963 0.00095695 0.00021556 0.00109682\n","  0.00014156 0.00095876 0.00015208 0.00222982 0.00026867 0.00019761\n","  0.00024685 0.0004663  0.00082219 0.00050388 0.00009599 0.00312875\n","  0.00037444 0.00032779 0.00032765 0.00106188 0.0004356  0.00026649]\n"," [0.35763496 0.6372472  0.0006081  0.00004856 0.00007403 0.00015032\n","  0.00011066 0.00011063 0.00015334 0.00005466 0.00004795 0.00032243\n","  0.00007741 0.00013544 0.00005128 0.00053689 0.00004774 0.00010165\n","  0.00014021 0.00021887 0.00009244 0.00068866 0.00002049 0.00026023\n","  0.00007936 0.00008002 0.00032331 0.00022835 0.00018366 0.00017115]\n"," [0.6780546  0.32188568 0.00000553 0.00000033 0.00000102 0.00000164\n","  0.0000033  0.0000015  0.00000364 0.00000135 0.0000004  0.00000233\n","  0.00000017 0.00000247 0.00000012 0.00000161 0.00000055 0.00000041\n","  0.00000038 0.00000226 0.00000218 0.00000554 0.00000009 0.00000792\n","  0.00000036 0.00000085 0.00000185 0.00001    0.00000131 0.00000065]\n"," [0.49896976 0.49617106 0.00022924 0.00008026 0.00005955 0.00007486\n","  0.00005733 0.00042261 0.00010268 0.0000818  0.00006968 0.00048287\n","  0.00003941 0.00011784 0.00003346 0.00017173 0.00008125 0.00012818\n","  0.00012805 0.00046918 0.00024885 0.00035773 0.00008543 0.00038799\n","  0.00006582 0.00006222 0.00011725 0.00017942 0.00040078 0.00012367]\n"," [0.34954274 0.6494668  0.00007574 0.00000935 0.00001574 0.00001361\n","  0.00004947 0.00004653 0.00004373 0.00002802 0.00000601 0.00004688\n","  0.00000867 0.00006837 0.00000333 0.00005464 0.0000199  0.00001194\n","  0.00001157 0.00008884 0.00004192 0.00002947 0.00001512 0.00007495\n","  0.00001349 0.00002901 0.00001775 0.00007791 0.00004514 0.00004329]\n"," [0.23850232 0.7600844  0.00006811 0.00000222 0.00001861 0.00002961\n","  0.0000508  0.0001016  0.00014351 0.00005074 0.00003684 0.00009101\n","  0.00002021 0.00008183 0.00000437 0.00011745 0.00007005 0.00000726\n","  0.00001918 0.00002116 0.00006079 0.00004398 0.00001791 0.00007157\n","  0.00000896 0.00003984 0.00004647 0.00003245 0.00009216 0.00006469]\n"," [0.5353251  0.44872347 0.00096256 0.00017975 0.00036313 0.00041506\n","  0.00056269 0.001063   0.00029117 0.00073737 0.00036288 0.00099045\n","  0.00031799 0.00032494 0.00021684 0.00095305 0.00033515 0.0005351\n","  0.0007286  0.00064066 0.0003713  0.00041288 0.00005623 0.00087806\n","  0.000122   0.00025693 0.00102666 0.00059007 0.0006323  0.00162446]\n"," [0.49693602 0.5004349  0.00005708 0.00002276 0.00005394 0.00006072\n","  0.00003805 0.00016633 0.00015514 0.0000415  0.0000071  0.00026277\n","  0.00001056 0.00013767 0.00001078 0.00017462 0.00005715 0.00002149\n","  0.00004785 0.00025015 0.00008381 0.00013116 0.00001186 0.00022235\n","  0.00005346 0.00006867 0.00004495 0.0002857  0.00010492 0.00004654]\n"," [0.31876373 0.6713469  0.0005651  0.00020901 0.00030369 0.00017568\n","  0.00028933 0.00036043 0.00067671 0.00011969 0.00004107 0.00103484\n","  0.00011383 0.00017616 0.00005163 0.00028881 0.00012354 0.00059308\n","  0.00005363 0.00023656 0.00041318 0.00085382 0.00016347 0.00017538\n","  0.00025879 0.00064138 0.00023143 0.00079629 0.00022822 0.00071448]] (3.186 sec)\n","INFO:tensorflow:Saving checkpoints for 300 into gdrive/My Drive/data/train/tmp/pets_convnet_model/model.ckpt.\n","INFO:tensorflow:Loss for final step: 0.7501251.\n","INFO:tensorflow:Calling model_fn.\n","INFO:tensorflow:Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2019-04-18T00:00:57Z\n","INFO:tensorflow:Graph was finalized.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1266: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use standard file APIs to check for files with this prefix.\n","INFO:tensorflow:Restoring parameters from gdrive/My Drive/data/train/tmp/pets_convnet_model/model.ckpt-300\n","INFO:tensorflow:Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","INFO:tensorflow:Finished evaluation at 2019-04-18-00:00:57\n","INFO:tensorflow:Saving dict for global step 300: accuracy = 0.55, global_step = 300, loss = 0.7107791\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 300: gdrive/My Drive/data/train/tmp/pets_convnet_model/model.ckpt-300\n","{'accuracy': 0.55, 'loss': 0.7107791, 'global_step': 300}\n"],"name":"stdout"}]},{"metadata":{"id":"wbOktmck5aLK","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}